/*
@title: Key Land
@author: Aditi Ranjan
*/

const player = "p";
const wall = "w";
const key = "k";
const door = "d";
const goal = "g";

setLegend(
  [player, bitmap`
................
......77777.....
.......000......
......00.0......
......0..00.....
......0...0.00..
....000L.L0.0...
....0.0...000...
...00.08880.....
......0...0.....
.....00...0.....
.....0...00.....
.....00000......
......0.0.......
.....00.00......
................`],
  [wall, bitmap`
................
................
......333333....
....3333333333..
...333333333333.
....3333333333..
......333333....
................
................
....333333......
....3333333333..
....33333333333.
....3333333333..
....333333......
................
................`],
  [key, bitmap`
................
................
......444444....
......444444....
......444444....
......444444....
.......4444.....
......2.44......
......2244......
......2244......
......2244.44...
......2244444...
......2244444...
......22........
................
................`],
  [door, bitmap`
................
......99999.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......9...9.....
......99999.....
................
................`],
  [goal, bitmap`
................
................
.......222......
.......2.2......
......2...2.....
.....2.....2....
....2.......2...
...2.........2..
....2.......2...
.....2.....2....
......2...2.....
.......2.2......
.......222......
................
................
................`]
);

setSolids([player, wall, door]);

let level = 0;
const levels = [
  map`
p.w...k
..w.w.d
..w.w..
...g...`,
  map`
p.w.k.d
..w.w.w
..w.k.d
..w.w..
..g....`
];

setMap(levels[level]);

setPushables({
  [player]: []
});

let keysCollected = 0;

onInput("w", () => {
  getFirst(player).y -= 1;
});
onInput("a", () => {
  getFirst(player).x -= 1;
});
onInput("s", () => {
  getFirst(player).y += 1;
});
onInput("d", () => {
  getFirst(player).x += 1;
});

afterInput(() => {
  let playerPosition = getFirst(player);
  let goalPosition = getFirst(goal);
  let keys = getAll(key);

  // Check for key collection
  keys.forEach(k => {
    if (playerPosition.x === k.x && playerPosition.y === k.y) {
      keysCollected += 1;
      k.remove();
    }
  });

  // Check for door unlocking
  let doors = getAll(door);
  doors.forEach(d => {
    if (playerPosition.x === d.x && playerPosition.y === d.y && keysCollected > 0) {
      d.remove();
      keysCollected -= 1;
    }
  });

  // Check for reaching the goal
  if (playerPosition.x === goalPosition.x && playerPosition.y === goalPosition.y) {
    addText("You Win!", { x: 8, y: 4, color: color`2` });
  }
});
